name: Build

on: [push, pull_request]

jobs:
  build-cmake:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, ubuntu-20.04]
        include:
        - os: ubuntu-latest
          cmake-args: -G Ninja
          package-file: "*-linux_x86_64.tar.xz"

        - os: ubuntu-20.04
          cmake-path: /usr/bin/
          cmake-args: -G Ninja
          package-file: "*-linux_x86_64.tar.xz"

        - os: macOS-latest
          cmake-args: -G Ninja
          package-file: "*-macos.dmg"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Prepare Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update -y
        sudo apt-get install pkg-config cmake ninja-build libfreetype6-dev libsdl2-dev libglew-dev -y

    - name: Prepare MacOS
      if: contains(matrix.os, 'macOS')
      run: |
        brew update || true
        brew install pkg-config sdl2 python3 ninja glew || true
        # --overwrite for:  Target /usr/local/bin/2to3 already exists.
        brew link --overwrite python@3.12
        brew upgrade freetype
        sudo rm -rf /Library/Developer/CommandLineTools

    - name: Build in debug mode
      run: |
        mkdir debug
        cd debug
        ${{ matrix.cmake-path }}cmake --version
        ${{ matrix.cmake-path }}cmake ${{ matrix.cmake-args }} -DCMAKE_BUILD_TYPE=Debug ..
        ${{ matrix.cmake-path }}cmake --build . --config Debug ${{ matrix.build-args }}

    - name: Build in release mode
      run: |
        mkdir release
        cd release
        ${{ matrix.cmake-path }}cmake ${{ matrix.cmake-args }} -DCMAKE_BUILD_TYPE=Release ..
        ${{ matrix.cmake-path }}cmake --build . --config Release ${{ matrix.build-args }}

  build-bam:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest]
        include:
        - name: "Ubuntu-Latest x86_64"
          os: ubuntu-latest
          package-full-file: ninslash-linux_x86_64-release.tar.xz
        - name: "macOS-Latest x86_64"
          os: macOS-latest
          package-full-file: ninslash-macos_x86_64-release.tar.xz

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Checkout bam
      uses: actions/checkout@v2
      with:
        repository: matricks/bam
        ref: 8cd08744c37666830d439ab54016c9d228c63b68
        path: ./bam

    - name: Prepare Linux
      if: contains(matrix.os, 'ubuntu')
      run: |
        sudo apt-get update -y
        sudo apt-get install libfreetype6-dev libsdl2-dev -y
        cd bam
        ./make_unix.sh

    - name: Prepare MacOS
      if: contains(matrix.os, 'macOS')
      run: |
        brew update
        brew install sdl2
        cd bam
        ./make_unix.sh

    - name: Build in debug mode
      run: ./bam/bam conf=debug all

    - name: Build in release mode
      run: ./bam/bam conf=release all
    
    - name: Package Release
      run: tar -cf ${{ matrix.package-full-file }} ninslash_srv ninslash data cfg storage.cfg license.txt autoexec.cfg

    - name: Upload Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.name }}
        path: ${{ matrix.package-full-file }}